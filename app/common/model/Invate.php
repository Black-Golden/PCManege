<?php
// +----------------------------------------------------------------------
// | RXThinkCMF框架 [ RXThinkCMF ]
// +----------------------------------------------------------------------
// | 版权所有 2017~2020 南京RXThinkCMF研发中心
// +----------------------------------------------------------------------
// | 官方网站: http://www.rxthink.cn
// +----------------------------------------------------------------------
// | Author: 牧羊人 <1175401194@qq.com>
// +----------------------------------------------------------------------

namespace app\common\model;


use function ccxtpro\print_ticker;

/**
 * 产品分类-模型
 * @author 测试
 * @since: 2021/09/18
 * Class Category
 * @package app\adminapi\model
 */
class Invate extends BaseModel
{
    // 设置数据表名
    public $name = "invate";

    /**
     * 获取缓存信息
     * @param int $id 记录ID
     * @return \app\common\model\数据信息|mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @author 测试
     * @since: 2021/09/18
     */
    public function getInfo($id)
    {
        $info = parent::getInfo($id); // TODO: Change the autogenerated stub
        return $info;
    }

    public function relation($param)
    {
        $data = [
            "user_id" => $param["user_id"],
            "parent_one_user_id" => 0,
            "parent_two_user_id" => 0,
        ];
        if ($param["parent_id"] != 0) {
            $data["parent_one_user_id"] = $param["parent_id"];
            $this->where(["user_id" => $param["parent_id"]])->inc('invate_person', 1)->update();
            //首先查询邀请人的上级
            $one = $this->where(["user_id" => $param["parent_id"]])->find();
            if ($one["parent_one_user_id"] != 0) {
                $this->where(["user_id" => $one["parent_one_user_id"]])->inc('invate_person', 1)->update();
                $data["parent_two_user_id"] = $one["parent_one_user_id"];
            }
        }
        $this->insert($data);
    }

    //开通策略奖励
    public function open($param)
    {
        //这个用户充值了点卡
        $data = $this->where(["user_id" => $param["user_id"]])->find();
        if ($data["parent_one_user_id"] != 0) {
            //查询登记
            $this->where(["user_id" => $data["parent_one_user_id"]])->inc('active_person', 1)->update();
            //顺便给邀请人升级升级(先查询邀请人)
            $parent_user = $this->where(["user_id" => $data["parent_one_user_id"]])->find();
            //查询team
            $team = TeamConfig::where("person_min", "<=", $parent_user["active_person"])->where("person_max", ">=", $parent_user["active_person"])->find();

            //判断是否需要用户升级
            if ($parent_user["team_id"] != $team["id"]) {
                $this->where(["id" => $parent_user["id"]])->update(["team_id" => $team["id"]]);
            }
//            var_dump($parent_user["parent_one_user_id"]);die;
            if ($parent_user["parent_one_user_id"] != 0) {

                //查询登记
                $this->where(["user_id" => $parent_user["parent_one_user_id"]])->inc('active_person', 1)->update();

                $parent_one_user = $this->where(["user_id" => $parent_user["parent_two_user_id"]])->find();
                //查询team
                $team = TeamConfig::where("person_min", "<=", $parent_user["active_person"])->where("person_max", ">=", $parent_user["active_person"])->find();
                //判断是否需要用户升级
                if ($parent_one_user["team_id"] != $team["id"]) {
                    $this->where(["id" => $parent_one_user["id"]])->update(["team_id" => $team["id"]]);
                }
            }
        }
    }
    public function give($param)
    {

        //这个用户充值了点卡
        $data = $this->where(["user_id" => $param["user_id"]])->find();
//        var_dump($data->toArray());die();
        if ($data["parent_one_user_id"] != 0) {
            //判断用户身份
            $one_member = Member::where(["id" => $data["parent_one_user_id"]])->find();

            if ($one_member["role_id"] == 0) {

                $parent_user = $this->where(["user_id" => $data["parent_one_user_id"]])->find();
                //echo $data["parent_one_user_id"];
                $team = TeamConfig::where(["id" => $parent_user["team_id"]])->find();
                $amount = $param["amount"] * $team["one_per"];
                //同时写入佣金流水表
                $id= Commission::create([
                    'user_id' => $parent_user["user_id"],
                    "type_id" => 1,
                    "num" => $amount,
                    "user_num" => $param["amount"],
                    "now_person" => $parent_user["active_person"],
                    "now_per" => $team["one_per"],
                    'memo' => '用户充值' . $param["amount"] . 'USDT，您的直推奖励' . $amount . 'USDT',
                    'form_user_id' =>  $param["user_id"]
                ]);
//                var_dump();die;
                //同时写入记录
                $create_data = [
                    'user_id' => $parent_user["user_id"],
                    'qb_usdt' => $amount,
                    'usdt_memo' => '用户充值' . $param["amount"] . 'USDT，您的直推奖励' . $amount . 'USDT',
                    'usdt_type_id' => 3,
                    'commission_id' => $id['id'],
                ];
                Member::setUsdt($create_data);
                //同时添加累计金额
                $this->where(["user_id" => $parent_user["user_id"]])->inc('income_usdt', $amount)->update();
            }
        }
        if ($data["parent_two_user_id"] != 0) {
            $one_member = Member::where(["id" => $data["parent_two_user_id"]])->find();
            if ($one_member["role_id"] == 0) {
                $parent_user = $this->where(["user_id" => $data["parent_two_user_id"]])->find();
                $team = TeamConfig::where(["id" => $parent_user["team_id"]])->find();
                $amount = $param["amount"] * $team["two_per"];

                //同时写入佣金流水表
                Commission::create([
                    'user_id' => $parent_user["user_id"],
                    "type_id" => 2,
                    "num" => $amount,
                    "user_num" => $param["amount"],
                    "now_person" => $parent_user["active_person"],
                    "now_per" => $team["two_per"],
                    'memo' => '用户充值' . $param["amount"] . 'USDT，您的间接奖励' . $amount . 'USDT',
                    'form_user_id' =>  $param["user_id"]
                ]);
                $create_data = [
                    'user_id' => $parent_user["user_id"],
                    'qb_usdt' => $amount,
                    'usdt_memo' => '用户充值' . $param["amount"] . 'USDT，您的间接奖励' . $amount . 'USDT',
                    'usdt_type_id' => 3,
                    'commission_id' => $id['id'],
                ];
                Member::setUsdt($create_data);
                $this->where(["user_id" => $parent_user["user_id"]])->inc('income_usdt', $amount)->update();
            }
        }
    }

}
