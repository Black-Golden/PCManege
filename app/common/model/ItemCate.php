<?php
// +----------------------------------------------------------------------
// | RXThinkCMF框架 [ RXThinkCMF ]
// +----------------------------------------------------------------------
// | 版权所有 2017~2020 南京RXThinkCMF研发中心
// +----------------------------------------------------------------------
// | 官方网站: http://www.rxthink.cn
// +----------------------------------------------------------------------
// | Author: 牧羊人 <1175401194@qq.com>
// +----------------------------------------------------------------------

namespace app\common\model;

/**
 * 栏目-模型
 * @author 牧羊人
 * @since 2020/11/15
 * Class ItemCate
 * @package app\common\model
 */
class ItemCate extends BaseModel
{
    // 设置数据表名
    protected $name = "item_cate";

    /**
     * 获取记录信息
     * @param int $id 栏目ID
     * @return 数据信息|mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @author 牧羊人
     * @since 2020/11/15
     */
    public function getInfo($id)
    {
        $info = parent::getInfo($id); // TODO: Change the autogenerated stub
        if ($info) {
            // 封面
            if ($info['cover']) {
                $info['cover'] = get_image_url($info['cover']);
            }
        }
        return $info;
    }

    /**
     * 获取栏目名称
     * @param $cateId
     * @param string $delimiter
     * @return string|null
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @since 2020/11/15
     * @author 牧羊人
     */
    public function getCateName($cateId, $delimiter = "")
    {
        do {
            $info = $this->getInfo($cateId);
            $names[] = $info['name'];
            $cateId = $info['pid'];
        } while ($cateId > 0);
        if (!empty($names)) {
            $names = array_reverse($names);
            if (count($names) >= 2) {
                if (strpos($names[1], $names[0]) === 0) {
                    unset($names[0]);
                }
            }
            return implode($delimiter, $names);
        }
        return null;
    }

}
