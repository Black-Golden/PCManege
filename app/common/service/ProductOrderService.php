<?php 
// +----------------------------------------------------------------------
// | RXThinkCMF框架 [ RXThinkCMF ]
// +----------------------------------------------------------------------
// | 版权所有 2017~2020 南京RXThinkCMF研发中心
// +----------------------------------------------------------------------
// | 官方网站: http://www.rxthink.cn
// +----------------------------------------------------------------------
// | Author: 牧羊人 <1175401194@qq.com>
// +----------------------------------------------------------------------

namespace app\common\service;


use app\common\model\Product;
use app\common\model\ProductOrder;

/**
 * 策略记录管理-服务类
 * @author 测试
 * @since: 2023/09/26
 * Class ProductOrderService
 * @package app\adminapi\service
 */
class ProductOrderService extends BaseService
{
    /**
     * 构造函数
     * LevelService constructor.
     */
    public function __construct()
    {
        parent::__construct();
        $this->model = new ProductOrder();
    }

	/**
     * 获取数据列表
     * @return array
     * @since 2023/09/26
     * @author 测试
     */
    public function getList()
    {
        $param = $this->input;

        // 查询条件
        $map = [];

	
	    // 状态
        $status = isset($param['status']) ? (int)$param['status'] : 0;
        if ($status) {
            $map[] = ['status', '=', $status];
        }
	
        return parent::getList($map); // TODO: Change the autogenerated stub
    }

    public function order($id){
//        var_dump($id);
        $list = $this->model->where('user_id',$id)->where('mark',1)->select()->toArray();
        foreach ($list as &$v){
            $v['protocol_period'] = Product::where('id',$v['product_id'])->value('protocol_period');
            $v['name'] = Product::where('id',$v['product_id'])->value('name');
            $v['platform'] =$v['platform_id']==2?'欧意':'币安';
            $v['loss'] =$v['now_money']-$v['invest'];
            $v['loss_rate'] =$v['loss'] /$v['invest'] ;
        }
        return message('操作成功',true,$list);
    }





                            		                    
}
