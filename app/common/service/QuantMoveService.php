<?php
// +----------------------------------------------------------------------
// | RXThinkCMF框架 [ RXThinkCMF ]
// +----------------------------------------------------------------------
// | 版权所有 2017~2020 南京RXThinkCMF研发中心
// +----------------------------------------------------------------------
// | 官方网站: http://www.rxthink.cn
// +----------------------------------------------------------------------
// | Author: 牧羊人 <1175401194@qq.com>
// +----------------------------------------------------------------------

namespace app\common\service;


use app\common\model\Member;
use app\common\model\QuantMove;

/**
 * 用户转出管理-服务类
 * @author 测试
 * @since: 2022/01/23
 * Class QuantMoveService
 * @package app\adminapi\service
 */
class QuantMoveService extends BaseService
{
    /**
     * 构造函数
     * LevelService constructor.
     */
    public function __construct()
    {
        parent::__construct();
        $this->model = new QuantMove();
    }

	/**
     * 获取数据列表
     * @return array
     * @since 2022/01/23
     * @author 测试
     */
    public function getList()
    {
        $param = $this->input;

        // 查询条件
        $map = [];
        if(isset($param['start_time']) && isset($param['end_time'])){
            $start = strtotime($param['start_time']);
            $end = strtotime($param['end_time']);
            $map[] = ['create_time', 'BETWEEN', [$start,$end]];
        }
        if(isset($param['user_id_from_name'])){

            $ids = Member::where('username','like',"%{$param['user_id_from_name']}%") ->column('id');

            $map[]=['user_id_from','IN',$ids];
        }
        if(isset($param['user_id_to_name'])){

            $ids = Member::where('username','like',"%{$param['user_id_to_name']}%") ->column('id');

            $map[]=['user_id_to','IN',$ids];
        }
        if(isset($param['user_id_from'])){

            $map[]=['user_id_to|user_id_from','=',$param['user_id_from']];
        }

        return parent::getList($map); // TODO: Change the autogenerated stub
    }


    public function getUser($userId){
        // 查询条件
        $map = [];
        $map[]=['user_id_from','=',$userId];
        $return  =  parent::getList($map,[],1,1); // TODO: Change the autogenerated stub

        return  $return;
    }


}
