<?php
// +----------------------------------------------------------------------
// | RXThinkCMF框架 [ RXThinkCMF ]
// +----------------------------------------------------------------------
// | 版权所有 2017~2020 南京RXThinkCMF研发中心
// +----------------------------------------------------------------------
// | 官方网站: http://www.rxthink.cn
// +----------------------------------------------------------------------
// | Author: 牧羊人 <1175401194@qq.com>
// +----------------------------------------------------------------------

namespace app\common\service;


use app\common\model\CustomPolicy;
use app\common\model\Member;

/**
 * 自定义策略管理-服务类
 * @author 测试
 * @since: 2022/11/15
 * Class CustomPolicyService
 * @package app\adminapi\service
 */
class CustomPolicyService extends BaseService
{
    /**
     * 构造函数
     * LevelService constructor.
     */
    public function __construct()
    {
        parent::__construct();
        $this->model = new CustomPolicy();
    }

	/**
     * 获取数据列表
     * @return array
     * @since 2022/11/15
     * @author 测试
     */
    public function getList()
    {
        $param = $this->input;

        // 查询条件
        $map = [];
        // 平台名称
        $user_name = isset($param['user_name']) ? trim($param['user_name']) : '';
        if ($user_name) {
            $ids = Member::where('username', 'like', "%{$user_name}%")->column('id');
            $map[] = ['user_id', 'in', $ids];
        }
        // 平台名称
        $symbol= isset($param['symbol']) ? trim($param['symbol']) : '';
        if ($symbol) {
            $symbol = strtoupper($symbol);
            $map[] = ['symbol', 'like', "%{$symbol}%"];
        }

        return parent::getList($map); // TODO: Change the autogenerated stub
    }


    public function edit($user_id ='')
    {

        $param = $this->input;
        $validate = getValidate([
            "symbol" => "require",
            "config" => "require",
//            "lever" => "require",

        ], [
            "symbol.require" => '请选择币种',
            "config.require" => '请输入策略',
//            "lever.require" => '请选择层级',

        ]);
        if ($validate["code"] == 1) {
            return $validate;
        }
        $param['lever'] = count($param['config']);
        $info = $this->model->where('user_id',$user_id)->where('symbol',$param['symbol'])->find();
        if($info){
            $param['id']=$info['id'];
        }
        $param['config'] = json_encode($param['config']);
        $param['user_id'] =$user_id;

        $return  =  parent::edit($param); // TODO: Change the autogenerated stub

        return get_object_vars($return);

    }



}
