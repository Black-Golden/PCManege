<?php
// +----------------------------------------------------------------------
// | RXThinkCMF框架 [ RXThinkCMF ]
// +----------------------------------------------------------------------
// | 版权所有 2017~2020 南京RXThinkCMF研发中心
// +----------------------------------------------------------------------
// | 官方网站: http://www.rxthink.cn
// +----------------------------------------------------------------------
// | Author: 牧羊人 <1175401194@qq.com>
// +----------------------------------------------------------------------

namespace app\common\service;


use app\common\model\Attachment;
use think\Db;
use think\exception\ErrorException;

/**
 * 上传管理-服务类
 * @author 测试
 * @since: 2021/11/26
 * Class AttachmentService
 * @package app\adminapi\service
 */
class AttachmentService extends BaseService
{
    /**
     * 构造函数
     * LevelService constructor.
     */
    public function __construct()
    {
        parent::__construct();
        $this->model = new Attachment();
    }

    /**
     * 获取数据列表
     * @return array
     * @since 2021/11/26
     * @author 测试
     */
    public function getList()
    {
        // 查询条件
        $map = [];
        //foreach ()
        $param = $this->input;

        // 筛选名称
        if (isset($param['show_type']) && $param['show_type']) {
            if ($param['show_type'] == 0) {
                $map[] = ['show_type', "=", "0"];
            } else {
                $map[] = ['show_type', "=", "1"];
            }
        }
        if (isset($param['with_table'])) {
            $map[] = ['with_table', "=", $param['with_table']];
        }
        $data = parent::getList($map, "id asc"); // TODO: Change the autogenerated stub
        $data = json_decode($data->getContent(), true);
        if ($data) {
            foreach ($data["data"] as $key => &$val) {
                $val["url"] = return_url($val["url"]);
            }
        }
        return return_json($data);
    }

//    /**
//     * 上传保存
//     */
//    public function upload()
//    {
//        // 验证器 验证
//        $validate = getValidate([
//            'file' => 'require',
//            'id' => 'require',
//            'type' => 'require'
//        ]);
//        if ($validate['code'] == 1) {
//            return return_json($validate);
//        }
//
//        // 接受数据
//        $param = $this->input;
//        $file = $param['file'];
//        $id = $param['id'];
//        $type = $param['type'];
//        if (!is_array($file)) {
//            $file = json_decode($file, true);
//        }
//        if (count($file) == 0) {
//            return return_json([
//                'code' => 1,
//                'msg' => '请上传文件'
//            ]);
//        }
//
//        // 循环插入数据
//        $newData = [];
//        foreach ($file as $key => &$val) {
//            $newData[$key]['with_id'] = $id;
//            $newData[$key]['name'] = $val['name'];
//            $newData[$key]['url'] = $val['filePath'];
//            $newData[$key]['type'] = $val['type'];
//            $newData[$key]['size'] = $val['size'];
//            $newData[$key]['real_name'] = $val['fileName'];
//            $newData[$key]['with_table'] = $type;
//            $newData[$key]['show_type'] = 2;
//            if (in_array($val["type"], ["jpeg", "jpg", "png", "gif"])) {
//                $newData[$key]['show_type'] = 1;
//            }
//
//            $newData[$key]['create_time'] = time();
//        }
//
//        $res = $this->model->insertAll($newData);
//        if ($res) {
//            return return_json([
//                'code' => 0,
//                'msg' => '上传成功'
//            ]);
//        }
//
//        return return_json([
//            'code' => 1,
//            'msg' => '上传失败'
//        ]);
//    }
//
    public function uploadFile()
    {
        // 验证器 验证
        $validate = getValidate([
            'id' => 'require',
            'rule' => 'require',
            'type' => 'require',
        ], [
            'id.require' => '数据错误',
            'rule.require' => '规格错误',
            'type.require' => '类型错误'
        ]);
        if ($validate['code'] == 1) {
            return return_json($validate);
        }
        // 接受数据
        $param = $this->input;
        $rule = $param['rule'];
        $id = $param['id'];
        $type = $param['type'];
        $error = "";
        // 上传文件(非图片)
        $newData = [];
        $result = upload_new_file('file', $type . '/' . $id, $error, $rule);
        if (!$result) {
            return message($error);
        }
        $newData['with_id'] = $id;
        $newData['name'] = $result['name'];
        $newData['url'] = $result['filePath'];
        $newData['type'] = $result['type'];
        $newData['size'] = $result['size'];
        $newData['real_name'] = $result['fileName'];
        $newData['with_table'] = $type;
        $newData['create_time'] = time();
        $newData['show_type'] = 0;


        if ($param['show_type'] == 0) {
            if (!in_array($result["type"], ["jpeg", "jpg", "png", "gif"])) {
                return return_json([
                    "code" => 1,
                    "msg" => "格式不正确"
                ]);
            }
        }
        if (!in_array($result["type"], ["jpeg", "jpg", "png", "gif"])) {
            $newData['show_type'] = 1;
        }
        try {
            $dbname = explode("-", $newData["with_table"]);
            if ($newData['show_type'] == 0) {
                \think\facade\Db::name($dbname[0])->where(["id" => $newData['with_id']])->update(["is_upload_pic" => 1]);
            } else {
                \think\facade\Db::name($dbname[0])->where(["id" => $newData['with_id']])->update(["is_upload_file" => 1]);
            }

            if ($dbname[0] == "order") {
                if (isset($dbname[1])) {
                    if ($dbname[1] == "pingzheng") {
                        \think\facade\Db::name($dbname[0])->where(["id" => $newData['with_id']])->update(["is_upload_pingzheng" => 1]);
                    }
                    if ($dbname[1] == "qianshou") {
                        \think\facade\Db::name($dbname[0])->where(["id" => $newData['with_id']])->update(["is_upload_qianshou" => 1]);
                    }
                }
            }

        } catch (ErrorException $e) {

        }
        $res = $this->model->create($newData);
        if ($res) {
            $result['id'] = $res['id'];
            return message("上传成功", true, $result);
        }
        return return_json([
            'code' => 1,
            'msg' => '上传失败'
        ]);
    }
}
